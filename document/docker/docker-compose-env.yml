version: '3'
services:

  mall-postgres:
    image: postgres:13.3
    container_name: mall-postgres
    command: [ "postgres", "-c", "log_statement=all" ]
    environment:
      - TZ=Asia/Shanghai
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=mall
    volumes:
      - ./mydata/postgres/data:/var/lib/postgresql/data
    ports:
      - "3306:5432"
    healthcheck:
      test: pg_isready -U root -d mall
      interval: 10s
      timeout: 5s
      retries: 5

  mall-flyway:
    image: flyway/flyway:7.11.1
    container_name: mall-flyway
    command: migrate
    volumes:
      - ./flyway/conf:/flyway/conf
      - ./flyway/migration:/flyway/sql
    depends_on:
      - mall-postgres

  redis:
    image: redis:5
    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - ./mydata/redis/data:/data #数据文件挂载
      - ./mydata/redis/log:/var/log/redis/ #数据文件挂载
      - ./redis:/usr/local/etc/redis
    ports:
      - 6379:6379

  # 需要手动在页面上添加连接到其他的redis服务器的地址，以local-redis为例子
  # 运行命令 docker network inspect springlearn_default获取local-redis的ip地址
  # 打开localhost:8190
  # 在Add Server中添加redis的ip地址，port为6379，密码为redis
  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=mall
      - REDIS_PASSWORD=redis
    ports:
      - "8081:8081"

#  nginx:
#    image: nginx:1.10
#    container_name: nginx
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf #配置文件挂载
#      - ./mydata/nginx/html:/usr/share/nginx/html #静态资源根目录挂载
#      - ./mydata/nginx/log:/var/log/nginx #日志文件挂载
#    ports:
#      - 80:80

  rabbitmq:
    image: rabbitmq:3.7.15-management
    container_name: rabbitmq
    volumes:
      - ./mydata/rabbitmq/data:/var/lib/rabbitmq #数据文件挂载
      - ./mydata/rabbitmq/log:/var/log/rabbitmq #日志文件挂载
    ports:
      - 5672:5672
      - 15672:15672

#  elasticsearch:
#    image: elasticsearch:7.6.2
#    container_name: elasticsearch
#    user: root
#    environment:
#      - "cluster.name=elasticsearch" #设置集群名称为elasticsearch
#      - "discovery.type=single-node" #以单一节点模式启动
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" #设置使用jvm内存大小
#    volumes:
#      - ./mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins #插件文件挂载
#      - ./mydata/elasticsearch/data:/usr/share/elasticsearch/data #数据文件挂载
#    ports:
#      - 9200:9200
#      - 9300:9300
#
#  logstash:
#    image: logstash:7.6.2
#    container_name: logstash
#    environment:
#      - TZ=Asia/Shanghai
#    volumes:
#      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf #挂载logstash的配置文件
#    depends_on:
#      - elasticsearch #kibana在elasticsearch启动之后再启动
#    links:
#      - elasticsearch:es #可以用es这个域名访问elasticsearch服务
#    ports:
#      - 4560:4560
#      - 4561:4561
#      - 4562:4562
#      - 4563:4563
#
#  kibana:
#    image: kibana:7.6.2
#    container_name: kibana
#    links:
#      - elasticsearch:es #可以用es这个域名访问elasticsearch服务
#    depends_on:
#      - elasticsearch #kibana在elasticsearch启动之后再启动
#    environment:
#      - "elasticsearch.hosts=http://es:9200" #设置访问elasticsearch的地址
#    ports:
#      - 5601:5601
#
#  mongo:
#    image: mongo:4.2.5
#    container_name: mongo
#    volumes:
#      - ./mydata/mongo/db:/data/db #数据文件挂载
#    ports:
#      - 27017:27017

  nacos-registry:
    image: nacos/nacos-server:1.3.0
    container_name: nacos-registry
    environment:
      - "MODE=standalone"
    ports:
      - 8848:8848
