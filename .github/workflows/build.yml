name: Mall Swarm CI

on:
  push:
    branches: [ develop, master ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:

    name: Build CI
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ 11, 17 ]

    steps:

      - name: Check Out Branch
        uses: actions/checkout@v2

      - name: Install JDK ${{ matrix.java }}
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          java-version: ${{ matrix.java }}

      - name: Set up Docker
        run: docker-compose -f document/docker/docker-compose-env.yml up -d mall-postgres mall-flyway redis rabbitmq mongo

      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m")"
        shell: bash

      - name: Cache Maven Repository
        id: cache-maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: deploy-snapshots-${{ steps.get-date.outputs.date }}

      - name: Build Backend
        run: mvn clean package

      - name: Shut Down Docker
        if: ${{ always() }}
        run: docker-compose -f document/docker/docker-compose-env.yml down --remove-orphans

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: mall-pr
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: ${{ job.status }}
          SLACK_USERNAME: GitHub Actions
          SLACK_TITLE: Build Result
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON_EMOJI: ":gear:"

  deploy:

    needs: build
    if: github.event_name == 'push'

    name: Mall Swarm Deployment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 14 ]

    env:
      DOCKER_HUB_SECRET: ${{ secrets.DockerHubSecret }}
      DOCKER_HUB_USER: ${{ secrets.DockerHubUser }}

    steps:

      - name: Setup java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}

      - name: Check Out Branch
        uses: actions/checkout@v2

      - name: Set up Docker
        run: docker-compose up -d db-postgres db-flyway quartz-postgres quartz-flyway test-postgres test-flyway artemis

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DockerHubUser }}
          password: ${{ secrets.DockerHubSecret }}

      - name: Build and Upload Server Image
        run: make image

      - name: Build and push image with distroless version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./core/src/main/config/Dockerfile.multi-native-distroless
          push: true
          tags: fulongshi/quarkus:distroless

      - name: Shut Down Docker
        run: docker-compose down --remove-orphans
